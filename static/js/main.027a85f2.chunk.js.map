{"version":3,"sources":["cablo/matchesgenerator/MatchesGenerator.js","cablo/matchesgenerator/MatchesTable.js","cablo/matchesgenerator/components.js","cablo/matchesgenerator/Main.js","index.js"],"names":["MatchesGenerator","n","matches","k","Math","ceil","_subset","Array","start","size","team","i","length","push","left","right","_getOppositeTeam","team1","team2","undefined","find","e","stateToScore","MatchesTable","nextProps","nextState","nextContext","this","props","matchesTableRenderSwitch","className","map","match","key","p","state","players","name","disabled","isEditing","onClick","onMatchChange","dangerouslySetInnerHTML","__html","React","Component","NameInput","Fragment","onSubmit","event","preventDefault","onPlayerAdd","type","placeholder","value","playerName","onChange","onPlayerNameChange","target","ref","input","focus","matchesPlayed","matchesLength","onStartStop","Players","player","index","onPlayerRemove","wins","Main","_sortPlayers","sort","player1","player2","compareWins","localeCompare","_updatePlayers","generate","setState","_clearPlayerWins","forEach","trim","editing","filter","_","winTeam","playerIndex","ReactDOM","render","document","getElementById"],"mappings":"4PAAqBA,E,sGAEDC,GACZ,IAAIC,EAAU,GACd,GAAID,EAAI,EAAG,CACP,IAAIE,EAAIC,KAAKC,KAAKJ,EAAI,GACtBD,EAAiBM,QAAQ,EAAGH,EAAGF,EAAG,IAAIM,MAAMJ,GAAID,GAEpD,OAAOA,I,8BAGIM,EAAOC,EAAMR,EAAGS,EAAMR,GACjC,GAAa,IAATO,EAOJ,IAAK,IAAIE,EAAIH,EAAOG,GAAMV,EAAIQ,EAAOE,IACjCD,EAAKA,EAAKE,OAASH,GAAQE,EAC3BX,EAAiBM,QAAQK,EAAI,EAAGF,EAAO,EAAGR,EAAGS,EAAMR,QARnDA,EAAQW,KAAK,CACTC,KAAK,YAAKJ,GACVK,MAAOf,EAAiBgB,iBAAiBN,EAAMT,O,uCAUnCgB,EAAOhB,GAE3B,IADA,IAAIiB,EAAQ,GADkB,WAErBP,QAC4BQ,IAA7BF,EAAMG,MAAK,SAAAC,GAAC,OAAIA,IAAMV,MACtBO,EAAML,KAAKF,IAFVA,EAAI,EAAGA,EAAIV,EAAGU,IAAM,EAApBA,GAKT,OAAOO,M,KC9BTI,EAAe,CAAC,4BAA6B,kBAAmB,kBAAmB,mBAEpEC,E,8LAEKC,EAAWC,EAAWC,GACxC,OAAQC,KAAKC,MAAMC,2BAA6BL,EAAUK,2B,+BAGpD,IAAD,OACL,OAASF,KAAKC,MAAM1B,QAAQU,OACxB,yBAAKkB,UAAU,qBACX,2BAAOA,UAAU,sCACb,+BACIH,KAAKC,MAAM1B,QAAQ6B,KAAI,SAACC,EAAOrB,GAAR,OACnB,wBAAIsB,IAAKtB,GACL,wBAAImB,UAAU,aAAY,0BAAMA,UAAU,cAAc,EAAKF,MAAM1B,QAAQU,OAASD,IACnFqB,EAAMlB,KAAKiB,KAAI,SAAAG,GAAC,OAAI,wBAAID,IAAKC,EAAGJ,UAAW,cAAgBE,EAAMG,OAAQ,EAAKP,MAAMQ,QAAQF,GAAGG,SAChG,wBAAIP,UAAU,aACV,4BAAQQ,SAAU,EAAKV,MAAMW,UAAWT,UAAU,+BAA+BU,QAAS,SAAAnB,GAAC,OAAI,EAAKO,MAAMa,cAAc9B,IAAI+B,wBAAyB,CAACC,OAAQrB,EAAaU,EAAMG,WAEpLH,EAAMjB,MAAMgB,KAAI,SAAAG,GAAC,OAAI,wBAAID,IAAKC,EAAGJ,UAAW,eAAiBE,EAAMG,OAAQ,EAAKP,MAAMQ,QAAQF,GAAGG,gBAXpF,S,GAPJO,IAAMC,WCFnCC,EAAY,SAAClB,GACtB,OAAO,yBAAKE,UAAU,aAEdF,EAAMW,WACN,kBAAC,IAAMQ,SAAP,KACI,0BAAMC,SAAU,SAACC,GACbA,EAAMC,iBACNtB,EAAMuB,gBAEN,2BAAOC,KAAK,OAAOtB,UAAU,eACtBuB,YAAY,cACZC,MAAO1B,EAAM2B,WACbC,SAAU,SAAAnC,GAAC,OAAIO,EAAM6B,mBAAmBpC,EAAEqC,OAAOJ,QACjDK,IAAK,SAAAC,GAAK,OAAIA,GAASA,EAAMC,YAExC,4BAAQvB,UAAWV,EAAM2B,WAAW3C,OAAQwC,KAAK,SAAStB,UAAU,6BAA6BU,QAASZ,EAAMuB,aAAhH,SAIHvB,EAAMW,WACP,6BAAMX,EAAMkC,cAAZ,eAEJ,4BAAQhC,UAAU,mCAAmCQ,UAAWV,EAAMmC,cAAevB,QAASZ,EAAMoC,aAAcpC,EAAMW,UAAY,SAAW,WAI1I0B,EAAU,SAACrC,GACpB,OAASA,EAAMQ,QAAQxB,OACnB,yBAAKkB,UAAU,WACVF,EAAMQ,QAAQL,KAAI,SAACmC,EAAQC,GAAT,OACf,4BAAQ7B,UAAWV,EAAMW,UAAWN,IAAKkC,EAAOrC,UAAU,kCAClDU,QAAS,kBAAMZ,EAAMwC,eAAeD,KAASD,EAAO7B,MAAST,EAAMW,UAAa,GAAM,KAAO2B,EAAOG,KAAO,UAJ9F,MCtBhBC,G,wBAEjB,WAAY1C,GAAQ,IAAD,8BACf,4CAAMA,KAWV2C,aAAe,SAACnC,GACZ,OAAO,YAAIA,GAASoC,MAAK,SAACC,EAASC,GAC/B,IAAIC,EAAcD,EAAQL,KAAOI,EAAQJ,KACzC,OAAoB,IAAhBM,EACOF,EAAQpC,KAAKuC,cAAcF,EAAQrC,MAEvCsC,MAlBI,EAsBnBE,eAAiB,SAACzC,GAEd,IAAIlC,EAAUF,EAAiB8E,SAAS1C,EAAQxB,QAAQmB,KAAI,SAAAV,GAExD,OADAA,EAAEc,MAAQ,EACHd,KAEX,EAAK0D,SAAS,CACV3C,QAASA,EACTlC,QAASA,KA9BE,EAkCnB8E,iBAAmB,WACf,IAAI5C,EAAO,YAAO,EAAKD,MAAMC,SAE7B,OADAA,EAAQ6C,SAAQ,SAACf,GAAD,OAAYA,EAAOG,KAAO,KACnCjC,GArCQ,EAwCnBqB,mBAAqB,SAACF,GAClB,EAAKwB,SAAS,CACVxB,WAAYA,EACZ1B,0BAA2B,EAAKM,MAAMN,4BA3C3B,EA+CnBsB,YAAc,WACV,IAAII,EAAa,EAAKpB,MAAMoB,WAAW2B,OACnC3B,GACA,EAAKsB,eAAe,EAAKN,aAAL,sBAAsB,EAAKpC,MAAMC,SAAjC,CAA0C,CAACC,KAAMkB,EAAYc,KAAM,OAE3F,EAAKU,SAAS,CACVxB,WAAY,MArDD,EAyDnBS,YAAc,WACV,EAAKe,SAAS,CACVI,SAAU,EAAKhD,MAAMgD,QACrB/C,QAAS,EAAK4C,sBA5DH,EAgEnBZ,eAAiB,SAACD,GACV,EAAKhC,MAAMgD,SACX,EAAKN,eAAe,EAAK1C,MAAMC,QAAQgD,QAAO,SAACC,EAAG1E,GAAJ,OAAUA,IAAMwD,OAlEnD,EAsEnB1B,cAAgB,SAAC0B,GACb,IAAI/B,EAAU,EAAK4C,mBAEf9E,EAAO,YAAO,EAAKiC,MAAMjC,SAC7BA,EAAQiE,GAAOhC,QACXjC,EAAQiE,GAAOhC,MAAQ,IACvBjC,EAAQiE,GAAOhC,MAAQ,GAG3B,IAAI2B,EAAgB,EACpB5D,EAAQ+E,SAAQ,SAACjD,GACb,IAAIsD,EAA2B,IAAhBtD,EAAMG,MAAeH,EAAMlB,KAAwB,IAAhBkB,EAAMG,MAAcH,EAAMjB,MAAQ,KAChFuE,IACAA,EAAQL,SAAQ,SAACM,GAAD,OAAiBnD,EAAQmD,GAAalB,UACtDP,QAKR,EAAKiB,SAAS,CACV3C,QAASA,EACTlC,QAASA,EACT4D,cAAeA,KA1FnB,EAAK3B,MAAQ,CACTgD,SAAS,EACT5B,WAAY,GACZnB,QAAS,GACTlC,QAAS,GACT4D,cAAe,EACfjC,0BAA0B,GARf,E,sEAgGT,IAAD,OACL,OAAO,kBAAC,IAAMkB,SAAP,KACH,kBAAC,EAAD,CAAaR,UAAWZ,KAAKQ,MAAMgD,QACtB5B,WAAY5B,KAAKQ,MAAMoB,WACvBQ,cAAepC,KAAKQ,MAAMjC,QAAQU,OAClCkD,cAAenC,KAAKQ,MAAM2B,cAC1BL,mBAAoB9B,KAAK8B,mBACzBN,YAAaxB,KAAKwB,YAClBa,YAAa,kBAAM,EAAKA,iBACrC,kBAAC,EAAD,CAAWzB,UAAWZ,KAAKQ,MAAMgD,QACtB/C,QAAST,KAAK4C,aAAa5C,KAAKQ,MAAMC,SACtCgC,eAAgBzC,KAAKyC,iBAChC,kBAAC,EAAD,CACI7B,UAAWZ,KAAKQ,MAAMgD,QACtBtD,yBAA0BF,KAAKQ,MAAMN,yBACrC3B,QAASyB,KAAKQ,MAAMjC,QACpBkC,QAAST,KAAKQ,MAAMC,QACpBK,cAAe,SAAC0B,GAAD,OAAW,EAAK1B,cAAc0B,W,GAnH3BvB,IAAMC,YCHxC2C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.027a85f2.chunk.js","sourcesContent":["export default class MatchesGenerator {\n\n    static generate(n) {\n        let matches = [];\n        if (n > 1) {\n            let k = Math.ceil(n / 2);\n            MatchesGenerator._subset(0, k, n, new Array(k), matches);\n        }\n        return matches;\n    }\n\n    static _subset(start, size, n, team, matches) {\n        if (size === 0) {\n            matches.push({\n                left: [...team],\n                right: MatchesGenerator._getOppositeTeam(team, n)\n            });\n            return;\n        }\n        for (let i = start; i <= (n - size); i++) {\n            team[team.length - size] = i;\n            MatchesGenerator._subset(i + 1, size - 1, n, team, matches);\n        }\n    }\n\n    static _getOppositeTeam(team1, n) {\n        let team2 = [];\n        for (let i = 0; i < n; i++) {\n            if (team1.find(e => e === i) === undefined) {\n                team2.push(i);\n            }\n        }\n        return team2;\n    }\n}","import React from 'react';\n\nconst stateToScore = ['&nbsp;&nbsp;:&nbsp;&nbsp;', '0&nbsp;:&nbsp;0', '1&nbsp;:&nbsp;0', '0&nbsp;:&nbsp;1'];\n\nexport default class MatchesTable extends React.Component {\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return (this.props.matchesTableRenderSwitch === nextProps.matchesTableRenderSwitch);\n    }\n\n    render() {\n        return (!this.props.matches.length) ? null :\n            <div className=\"table-scroll-wrap\">\n                <table className=\"table table-bordered table-striped\">\n                    <tbody>{\n                        this.props.matches.map((match, i) =>\n                            <tr key={i}>\n                                <td className=\"col-index\"><span className=\"cell-index\">{this.props.matches.length - i}</span></td>\n                                {match.left.map(p => <td key={p} className={'state-left-' + match.state}>{this.props.players[p].name}</td>)}\n                                <td className=\"col-state\">\n                                    <button disabled={this.props.isEditing} className=\"btn btn-primary button-state\" onClick={e => this.props.onMatchChange(i)} dangerouslySetInnerHTML={{__html: stateToScore[match.state]}}/>\n                                </td>\n                                {match.right.map(p => <td key={p} className={'state-right-' + match.state}>{this.props.players[p].name}</td>)}\n                            </tr>\n                        )\n                    }</tbody>\n                </table>\n            </div>\n    }\n}\n","import React from 'react';\n\nexport const NameInput = (props) => {\n    return <div className=\"form-line\">\n        {\n            props.isEditing &&\n            <React.Fragment>\n                <form onSubmit={(event) => {\n                    event.preventDefault();\n                    props.onPlayerAdd();\n                }}>\n                    <input type=\"text\" className=\"form-control\"\n                           placeholder=\"Player Name\"\n                           value={props.playerName}\n                           onChange={e => props.onPlayerNameChange(e.target.value)}\n                           ref={input => input && input.focus()}/>\n                </form>\n                <button disabled={!props.playerName.length} type=\"submit\" className=\"btn btn-primary button-add\" onClick={props.onPlayerAdd}>Add</button>\n            </React.Fragment>\n        }\n        {\n            !props.isEditing &&\n            <div>{props.matchesPlayed}&nbsp;matches</div>\n        }\n        <button className=\"btn btn-danger button-start-stop\" disabled={!props.matchesLength} onClick={props.onStartStop}>{props.isEditing ? 'Start!' : 'Stop!'}</button>\n    </div>\n};\n\nexport const Players = (props) => {\n    return (!props.players.length) ? null :\n        <div className=\"players\">\n            {props.players.map((player, index) =>\n                <button disabled={!props.isEditing} key={index} className=\"btn btn-secondary button-player\"\n                        onClick={() => props.onPlayerRemove(index)}>{player.name + ((props.isEditing) ? \"\" : (\" (\" + player.wins + \")\"))}\n                </button>)}\n        </div>\n};\n","import React from 'react';\nimport MatchesGenerator from './MatchesGenerator';\nimport MatchesTable from \"./MatchesTable\";\nimport * as C from './components';\nimport './css/bootstrap.min.css';\nimport './Main.css';\n\nexport default class Main extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            editing: true,\n            playerName: '',\n            players: [],\n            matches: [],\n            matchesPlayed: 0,\n            matchesTableRenderSwitch: false\n        };\n    }\n\n    _sortPlayers = (players) => {\n        return [...players].sort((player1, player2) => {\n            let compareWins = player2.wins - player1.wins;\n            if (compareWins === 0) {\n                return player1.name.localeCompare(player2.name);\n            }\n            return compareWins;\n        });\n    };\n\n    _updatePlayers = (players) => {\n        // generate matches and add state to each match\n        let matches = MatchesGenerator.generate(players.length).map(e => {\n            e.state = 0;\n            return e;\n        });\n        this.setState({\n            players: players,\n            matches: matches\n        });\n    };\n\n    _clearPlayerWins = () => {\n        let players = [...this.state.players];\n        players.forEach((player) => player.wins = 0);\n        return players;\n    };\n\n    onPlayerNameChange = (playerName) => {\n        this.setState({\n            playerName: playerName,\n            matchesTableRenderSwitch: !this.state.matchesTableRenderSwitch\n        });\n    };\n\n    onPlayerAdd = () => {\n        let playerName = this.state.playerName.trim();\n        if (playerName) {\n            this._updatePlayers(this._sortPlayers([...this.state.players, {name: playerName, wins: 0}]))\n        }\n        this.setState({\n            playerName: ''\n        });\n    };\n\n    onStartStop = () => {\n        this.setState({\n            editing: !this.state.editing,\n            players: this._clearPlayerWins()\n        });\n    };\n\n    onPlayerRemove = (index) => {\n        if (this.state.editing) {\n            this._updatePlayers(this.state.players.filter((_, i) => i !== index));\n        }\n    };\n\n    onMatchChange = (index) => {\n        let players = this._clearPlayerWins();\n        // update match state\n        let matches = [...this.state.matches];\n        matches[index].state++;\n        if (matches[index].state > 3) {\n            matches[index].state = 0;\n        }\n        // count all wins from matches\n        let matchesPlayed = 0;\n        matches.forEach((match) => {\n            let winTeam = (match.state === 2) ? match.left : (match.state === 3 ? match.right : null);\n            if (winTeam) {\n                winTeam.forEach((playerIndex) => players[playerIndex].wins++);\n                matchesPlayed++;\n            }\n        });\n\n        // count player wins and update players\n        this.setState({\n            players: players,\n            matches: matches,\n            matchesPlayed: matchesPlayed\n        });\n    };\n\n    render() {\n        return <React.Fragment>\n            <C.NameInput isEditing={this.state.editing}\n                         playerName={this.state.playerName}\n                         matchesLength={this.state.matches.length}\n                         matchesPlayed={this.state.matchesPlayed}\n                         onPlayerNameChange={this.onPlayerNameChange}\n                         onPlayerAdd={this.onPlayerAdd}\n                         onStartStop={() => this.onStartStop()}/>\n            <C.Players isEditing={this.state.editing}\n                       players={this._sortPlayers(this.state.players)}\n                       onPlayerRemove={this.onPlayerRemove}/>\n            <MatchesTable\n                isEditing={this.state.editing}\n                matchesTableRenderSwitch={this.state.matchesTableRenderSwitch}\n                matches={this.state.matches}\n                players={this.state.players}\n                onMatchChange={(index) => this.onMatchChange(index)}/>\n        </React.Fragment>\n    }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './cablo/matchesgenerator/Main';\n\nReactDOM.render(<Main/>, document.getElementById('root'));\n"],"sourceRoot":""}