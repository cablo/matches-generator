{"version":3,"sources":["cablo/matchesgenerator/MatchesGenerator.js","cablo/matchesgenerator/components.js","cablo/matchesgenerator/Main.js","index.js"],"names":["MatchesGenerator","n","matches","k","Math","ceil","_subset","Array","start","size","team","i","length","push","left","right","_getOppositeTeam","team1","team2","undefined","find","e","stateToScore","NameInput","props","className","isEditing","Fragment","onSubmit","event","preventDefault","onPlayerAdd","type","placeholder","value","playerName","onChange","onPlayerNameChange","target","ref","input","focus","disabled","onClick","matchesPlayed","matchesLength","onStartStop","Players","players","map","player","index","key","onPlayerRemove","name","wins","MatchesTable","match","p","state","onMatchChange","dangerouslySetInnerHTML","__html","Main","_sortPlayers","sort","player1","player2","compareWins","localeCompare","_updatePlayers","generate","setState","trim","editing","filter","_","forEach","winTeam","playerIndex","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f4cfc9f.chunk.js","sourcesContent":["export default class MatchesGenerator {\n\n    static generate(n) {\n        let matches = [];\n        if (n > 1) {\n            let k = Math.ceil(n / 2);\n            MatchesGenerator._subset(0, k, n, new Array(k), matches);\n        }\n        return matches;\n    }\n\n    static _subset(start, size, n, team, matches) {\n        if (size === 0) {\n            matches.push({\n                left: [...team],\n                right: MatchesGenerator._getOppositeTeam(team, n)\n            });\n            return;\n        }\n        for (let i = start; i <= (n - size); i++) {\n            team[team.length - size] = i;\n            MatchesGenerator._subset(i + 1, size - 1, n, team, matches);\n        }\n    }\n\n    static _getOppositeTeam(team1, n) {\n        let team2 = [];\n        for (let i = 0; i < n; i++) {\n            if (team1.find(e => e === i) === undefined) {\n                team2.push(i);\n            }\n        }\n        return team2;\n    }\n}","import React from 'react';\n\nconst stateToScore = ['&nbsp;&nbsp;:&nbsp;&nbsp;', '0&nbsp;:&nbsp;0', '1&nbsp;:&nbsp;0', '0&nbsp;:&nbsp;1'];\n\nexport const NameInput = (props) => {\n    return <div className=\"form-line\">\n        {\n            props.isEditing &&\n            <React.Fragment>\n                <form onSubmit={(event) => {\n                    event.preventDefault();\n                    props.onPlayerAdd();\n                }}>\n                    <input type=\"text\" className=\"form-control\"\n                           placeholder=\"Player Name\"\n                           value={props.playerName}\n                           onChange={e => props.onPlayerNameChange(e.target.value)}\n                           ref={input => input && input.focus()}/>\n                </form>\n                <button disabled={!props.playerName.length} type=\"submit\" className=\"btn btn-primary button-add\" onClick={props.onPlayerAdd}>Add</button>\n            </React.Fragment>\n        }\n        {\n            !props.isEditing &&\n            <div>{props.matchesPlayed}&nbsp;matches</div>\n        }\n        <button className=\"btn btn-danger button-start-stop\" disabled={!props.matchesLength} onClick={props.onStartStop}>{props.isEditing ? 'Start!' : 'Stop!'}</button>\n    </div>\n};\n\nexport const Players = (props) => {\n    return (!props.players.length) ? null :\n        <div className=\"players\">\n            {props.players.map((player, index) =>\n                <button disabled={!props.isEditing} key={index} className=\"btn btn-secondary button-player\"\n                        onClick={() => props.onPlayerRemove(index)}>{player.name + ((props.isEditing) ? \"\" : (\" (\" + player.wins + \")\"))}\n                </button>)}\n        </div>\n};\n\nexport const MatchesTable = (props) => {\n    return (!props.matches.length) ? null :\n        <div className=\"table-scroll-wrap\">\n            <table className=\"table table-bordered table-striped\">\n                <tbody>{\n                    props.matches.map((match, i) =>\n                        <tr key={i}>\n                            <td className=\"col-index\"><span className=\"cell-index\">{props.matches.length - i}</span></td>\n                            {match.left.map(p => <td key={p} className={'state-left-' + match.state}>{props.players[p].name}</td>)}\n                            <td className=\"col-state\">\n                                <button disabled={props.isEditing} className=\"btn btn-primary button-state\" onClick={e => props.onMatchChange(i)} dangerouslySetInnerHTML={{__html: stateToScore[match.state]}}/>\n                            </td>\n                            {match.right.map(p => <td key={p} className={'state-right-' + match.state}>{props.players[p].name}</td>)}\n                        </tr>\n                    )\n                }</tbody>\n            </table>\n        </div>\n};\n","import React from 'react';\nimport MatchesGenerator from './MatchesGenerator';\nimport * as C from './components';\nimport './css/bootstrap.min.css';\nimport './Main.css';\n\nexport default class Main extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            editing: true,\n            playerName: '',\n            players: [],\n            matches: [],\n            matchesPlayed: 0\n        };\n    }\n\n    _sortPlayers = (players) => {\n        return [...players].sort((player1, player2) => {\n            let compareWins = player2.wins - player1.wins;\n            if (compareWins === 0) {\n                return player1.name.localeCompare(player2.name);\n            }\n            return compareWins;\n        });\n    };\n\n    _updatePlayers = (players) => {\n        // generate matches and add state to each match\n        let matches = MatchesGenerator.generate(players.length).map(e => {\n            e.state = 0;\n            return e;\n        });\n        this.setState({\n            players: players,\n            matches: matches\n        });\n    };\n\n    onPlayerNameChange = (playerName) => {\n        this.setState({playerName: playerName});\n    };\n\n    onPlayerAdd = () => {\n        let playerName = this.state.playerName.trim();\n        if (playerName) {\n            this._updatePlayers(this._sortPlayers([...this.state.players, {name: playerName, wins: 0}]))\n        }\n        this.setState({\n            playerName: ''\n        });\n    };\n\n    onPlayerRemove = (index) => {\n        if (this.state.editing) {\n            this._updatePlayers(this.state.players.filter((_, i) => i !== index));\n        }\n    };\n\n    onMatchChange = (index) => {\n        // clear players wins\n        let players = [...this.state.players];\n        players.forEach((player) => player.wins = 0);\n\n        // update match state\n        let matches = [...this.state.matches];\n        matches[index].state++;\n        if (matches[index].state > 3) {\n            matches[index].state = 0;\n        }\n        // count all wins from matches\n        let matchesPlayed = 0;\n        matches.forEach((match) => {\n            let winTeam = (match.state === 2) ? match.left : (match.state === 3 ? match.right : null);\n            if (winTeam) {\n                winTeam.forEach((playerIndex) => players[playerIndex].wins++);\n                matchesPlayed++;\n            }\n        });\n\n        // count player wins and update players\n        this.setState({\n            players: players,\n            matches: matches,\n            matchesPlayed: matchesPlayed\n        });\n    };\n\n    render() {\n        return <React.Fragment>\n            <C.NameInput isEditing={this.state.editing}\n                         playerName={this.state.playerName}\n                         matchesLength={this.state.matches.length}\n                         matchesPlayed={this.state.matchesPlayed}\n                         onPlayerNameChange={this.onPlayerNameChange}\n                         onPlayerAdd={this.onPlayerAdd}\n                         onStartStop={() => this.setState({editing: !this.state.editing})}/>\n            <C.Players isEditing={this.state.editing}\n                       players={this._sortPlayers(this.state.players)}\n                       onPlayerRemove={this.onPlayerRemove}/>\n            <C.MatchesTable\n                isEditing={this.state.editing}\n                matches={this.state.matches}\n                players={this.state.players}\n                onMatchChange={(index) => this.onMatchChange(index)}/>\n        </React.Fragment>\n    }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './cablo/matchesgenerator/Main';\n\nReactDOM.render(<Main/>, document.getElementById('root'));\n"],"sourceRoot":""}